Primitive data types (undefined, null, boolean, number, string and symbol) are passed by value, i.e. data is passed into a copy of the original value, meaning that the following code returns true:
const num = "hello world";
const anotherNum = "hello world";
console.log(num === anotherNum);

Objects are data structures which can hold any number of primitives. They do not return equal even if they are the same. This is because they are passed by reference. Whenever we pass an object to a variable or a function, either one just holds a reference to it.
This means that the following code updates both obj and anotherObj at once:
const obj = {};
const anotherObj = obj;
anotherObj.a = 1;

Note: Although this behaviour allows us to dynamically add properties to objects, it can cause problems. We will learn how to fix these in the following screencasts.